{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/kevinmacaraeg/Documents/everysf3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/kevinmacaraeg/Documents/everysf3/src/components/Fun.jsx\";\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n\\n    min-height: 100vh;\\n    width: 100vw;\\n    background-size: 100%;\\n    background-repeat: no-repeat;\\n    background-position: center;\\n    background-image: url(img/\", \");\\n    position: absolute;\\n    z-index: 100;\\n    mix-blend-mode: screen;\\n    filter: blur(10px);\\n\\n\"]);\n\n  _templateObject4 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n\\n    display: flex;\\n    width: 100vw;\\n    height: 100vh;\\n    overflow: hidden;\\n    position: absolute;\\n    flex-wrap: wrap;\\n\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n\\n    height: 5vw;\\n    width: 5vw;\\n    background-color: black;\\n    opacity: 0;\\n\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n\\n    min-height: 100vh;\\n    width: 100vw;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    background-color: white !important;\\n    color: black;\\n    position: relative;\\n\\n    .type {\\n        position: absolute;\\n        top: 50%;\\n        left: 50%;\\n        transform: translate(-50%, -50%);\\n        width: 200px;\\n        text-align: left;\\n    }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport anime from 'animejs';\nimport Typist from 'react-typist';\nconst Wrapper = styled.div(_templateObject());\nconst DynamicItem = styled.div(_templateObject2());\nconst GridContainer = styled.div(_templateObject3());\nconst PictureCont = styled.div(_templateObject4(), props => props.image);\n\nclass Fun extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      animationRunning: false\n    };\n\n    this.makeArr = () => {\n      let arr = [];\n\n      for (var i = 0; i < 220; i++) {\n        arr.push(React.createElement(DynamicItem, {\n          className: \"el\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }));\n      }\n\n      return arr;\n    };\n\n    this.imageRotation = () => {\n      return \"ocean3.jpg\";\n    };\n\n    this.cursor = {\n      show: true,\n      blink: true,\n      element: '|',\n      hideWhenDone: false,\n      hideWhenDoneDelay: 1000\n    };\n  }\n\n  waveSequence() {\n    var tl = anime.timeline({\n      easing: 'easeOutExpo',\n      duration: 750,\n      begin: function () {},\n      complete: function () {}\n    });\n    tl.add({});\n  }\n\n  runAnime() {\n    var tl = anime.timeline({\n      easing: 'easeOutExpo',\n      duration: 750,\n      complete: function () {// this.waveSequence()\n      }\n    });\n    tl.add({\n      targets: '.gridCont .el',\n      scale: [{\n        value: .1,\n        easing: 'easeOutSine',\n        duration: 500\n      }, {\n        value: 1,\n        easing: 'easeInOutQuad',\n        duration: 1200\n      }],\n      opacity: 1,\n      delay: anime.stagger(200, {\n        grid: [20, 10],\n        from: 'center'\n      })\n    }, 7000).add({\n      targets: \".pictureCont\",\n      backgroundSize: \"120%\",\n      duration: 4000,\n      filter: 'blur(0px)',\n      opacity: 1,\n      easing: 'linear'\n    }, 7000).add({\n      targets: \".wrapper\",\n      backgroundColor: \"#000\",\n      easing: 'linear'\n    }, 1000);\n  }\n\n  gridAnimation() {\n    anime({\n      targets: '.gridCont .el',\n      scale: [{\n        value: .1,\n        easing: 'easeOutSine',\n        duration: 200\n      }, {\n        value: 1,\n        easing: 'easeInOutQuad',\n        duration: 200\n      }],\n      delay: anime.stagger(100, {\n        grid: [20, 10],\n        from: 'center'\n      })\n    }).add({\n      targets: \".type\",\n      opacity: \"0\",\n      duration: \"1\"\n    });\n  }\n\n  componentDidMount() {\n    console.log(\"Hey, thanks for visiting. Let me know if you want to work together, email me at kevin@everysf.com. Cheers\");\n    this.runAnime();\n  }\n\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(GridContainer, {\n      className: \"gridCont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, this.makeArr()), React.createElement(Typist, {\n      className: \"type\",\n      cursor: this.cursor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"What's the most effective way to get your story told on the web?\"), React.createElement(PictureCont, {\n      className: \"pictureCont\",\n      image: this.imageRotation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Fun;","map":{"version":3,"sources":["/Users/kevinmacaraeg/Documents/everysf3/src/components/Fun.jsx"],"names":["React","Component","styled","anime","Typist","Wrapper","div","DynamicItem","GridContainer","PictureCont","props","image","Fun","state","animationRunning","makeArr","arr","i","push","imageRotation","cursor","show","blink","element","hideWhenDone","hideWhenDoneDelay","waveSequence","tl","timeline","easing","duration","begin","complete","add","runAnime","targets","scale","value","opacity","delay","stagger","grid","from","backgroundSize","filter","backgroundColor","gridAnimation","componentDidMount","console","log","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components'\nimport anime from 'animejs';\nimport Typist from 'react-typist';\n\nconst Wrapper = styled.div`\n\n    min-height: 100vh;\n    width: 100vw;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: white !important;\n    color: black;\n    position: relative;\n\n    .type {\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        width: 200px;\n        text-align: left;\n    }\n`\n\nconst DynamicItem = styled.div`\n\n    height: 5vw;\n    width: 5vw;\n    background-color: black;\n    opacity: 0;\n\n`\n\nconst GridContainer = styled.div`\n\n    display: flex;\n    width: 100vw;\n    height: 100vh;\n    overflow: hidden;\n    position: absolute;\n    flex-wrap: wrap;\n\n`\n\nconst PictureCont = styled.div`\n\n    min-height: 100vh;\n    width: 100vw;\n    background-size: 100%;\n    background-repeat: no-repeat;\n    background-position: center;\n    background-image: url(img/${props=>(props.image)});\n    position: absolute;\n    z-index: 100;\n    mix-blend-mode: screen;\n    filter: blur(10px);\n\n`  \n\nclass Fun extends Component {\n\n    state = {\n        animationRunning: false,\n    }\n\n\n    waveSequence(){\n\n        var tl = anime.timeline({\n            easing: 'easeOutExpo',\n            duration: 750,\n            begin: function(){\n\n            },\n            complete: function() {\n\n            }\n        });\n\n        tl.add({\n\n        })\n\n    }\n\n    runAnime() {\n\n\n        var tl = anime.timeline({\n            easing: 'easeOutExpo',\n            duration: 750,\n            complete: function () {\n                // this.waveSequence()\n            }\n        });\n\n        tl.add({\n            targets: '.gridCont .el',\n            scale: [\n                { value: .1, easing: 'easeOutSine', duration: 500 },\n                { value: 1, easing: 'easeInOutQuad', duration: 1200 }\n            ],\n            opacity: 1,\n            delay: anime.stagger(200, { grid: [20, 10], from: 'center' })\n        }, 7000).add({\n            targets: \".pictureCont\",\n            backgroundSize: \"120%\",\n            duration: 4000,\n            filter: 'blur(0px)',\n            opacity: 1,\n            easing: 'linear',\n        }, 7000).add({\n            targets: \".wrapper\",\n            backgroundColor: \"#000\",\n            easing: 'linear',\n        }, 1000)\n\n    }\n\n    gridAnimation() {\n\n        anime({\n            targets: '.gridCont .el',\n            scale: [\n                { value: .1, easing: 'easeOutSine', duration: 200 },\n                { value: 1, easing: 'easeInOutQuad', duration: 200 }\n            ],\n            delay: anime.stagger(100, { grid: [20, 10], from: 'center' }),\n        }).add({\n            targets: \".type\",\n            opacity: \"0\",\n            duration: \"1\",\n        });\n\n    }\n\n\n    componentDidMount() {\n        console.log(\"Hey, thanks for visiting. Let me know if you want to work together, email me at kevin@everysf.com. Cheers\")\n        this.runAnime()\n\n    }\n\n    makeArr = () => {\n        let arr = [];\n        for (var i = 0; i < 220; i++) {\n            arr.push(<DynamicItem className=\"el\" />)\n        }\n        return arr\n    }\n\n    imageRotation = () => {\n        return \"ocean3.jpg\"\n    }\n\n    cursor = {\n        show: true,\n        blink: true,\n        element: '|',\n        hideWhenDone: false,\n        hideWhenDoneDelay: 1000,\n      }\n\n    render() {\n        return (\n            <Wrapper>\n                <GridContainer className=\"gridCont\">\n                    {this.makeArr()}\n                </GridContainer>\n                <Typist className=\"type\" cursor={this.cursor}>\n                    What's the most effective way to get your story told on the web?\n                </Typist>\n                <PictureCont className=\"pictureCont\" image={this.imageRotation}/>\n            </Wrapper>\n        );\n    }\n\n}\n\nexport default Fun;\n"]},"metadata":{},"sourceType":"module"}