{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/kevinmacaraeg/Documents/everysf3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/kevinmacaraeg/Documents/everysf3/src/components/Fun.jsx\";\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n\\n    display: flex;\\n    width: 100vw;\\n    height: 100vh;\\n    overflow: hidden;\\n    position: absolute;\\n    flex-wrap: wrap;\\n\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n\\n    height: 5vw;\\n    width: 5vw;\\n    background-color: black;\\n    opacity: 0;\\n\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n\\n    min-height: 100vh;\\n    width: 100vw;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    background-color: white !important;\\n    color: black;\\n    position: relative;\\n\\n    .type {\\n        position: absolute;\\n        top: 50%;\\n        left: 50%;\\n        transform: translate(-50%, -50%)\\n    }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport anime from 'animejs';\nimport Typist from 'react-typist';\nconst Wrapper = styled.div(_templateObject());\nconst DynamicItem = styled.div(_templateObject2());\nconst GridContainer = styled.div(_templateObject3());\n\nclass Fun extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      animationRunning: false\n    };\n\n    this.makeArr = () => {\n      let arr = [];\n\n      for (var i = 0; i < 220; i++) {\n        arr.push(React.createElement(DynamicItem, {\n          className: \"el\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }));\n      }\n\n      return arr;\n    };\n  }\n\n  runAnime() {\n    var tl = anime.timeline({\n      easing: 'easeOutExpo',\n      duration: 750,\n      complete: function () {// window.location.href = '/'\n      }\n    });\n    tl.add({\n      targets: '.gridCont .el',\n      scale: [{\n        value: .1,\n        easing: 'easeOutSine',\n        duration: 500\n      }, {\n        value: 1,\n        easing: 'easeInOutQuad',\n        duration: 1200\n      }],\n      opacity: 1,\n      delay: anime.stagger(200, {\n        grid: [20, 8],\n        from: 'center'\n      })\n    }, 5000);\n  }\n\n  gridAnimation() {\n    anime({\n      targets: '.gridCont .el',\n      scale: [{\n        value: .1,\n        easing: 'easeOutSine',\n        duration: 500\n      }, {\n        value: 1,\n        easing: 'easeInOutQuad',\n        duration: 1200\n      }],\n      delay: anime.stagger(200, {\n        grid: [20, 10],\n        from: 'center'\n      }),\n      duration: \"20\"\n    }).add({\n      targets: \".type\",\n      opacity: \"0\",\n      duration: \"1\"\n    });\n  }\n\n  componentDidMount() {\n    console.log(\"Hey, thanks for visiting. Let me know if you want to work together, email me at kevin@everysf.com. Cheers\");\n    this.runAnime();\n  }\n\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(GridContainer, {\n      className: \"gridCont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, this.makeArr()), React.createElement(Typist, {\n      className: \"type\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"The most effective way to get your story told on the web?\"));\n  }\n\n}\n\nexport default Fun;","map":{"version":3,"sources":["/Users/kevinmacaraeg/Documents/everysf3/src/components/Fun.jsx"],"names":["React","Component","styled","anime","Typist","Wrapper","div","DynamicItem","GridContainer","Fun","state","animationRunning","makeArr","arr","i","push","runAnime","tl","timeline","easing","duration","complete","add","targets","scale","value","opacity","delay","stagger","grid","from","gridAnimation","componentDidMount","console","log","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components'\nimport anime from 'animejs';\nimport Typist from 'react-typist';\n\nconst Wrapper = styled.div`\n\n    min-height: 100vh;\n    width: 100vw;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: white !important;\n    color: black;\n    position: relative;\n\n    .type {\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%)\n    }\n`\n\nconst DynamicItem = styled.div`\n\n    height: 5vw;\n    width: 5vw;\n    background-color: black;\n    opacity: 0;\n\n`\n\nconst GridContainer = styled.div`\n\n    display: flex;\n    width: 100vw;\n    height: 100vh;\n    overflow: hidden;\n    position: absolute;\n    flex-wrap: wrap;\n\n`\n\nclass Fun extends Component {\n\n    state = {\n        animationRunning: false,\n    }\n\n    runAnime() {\n\n\n        var tl = anime.timeline({\n            easing: 'easeOutExpo',\n            duration: 750,\n            complete: function () {\n                // window.location.href = '/'\n            }\n        });\n\n        tl.add({\n            targets: '.gridCont .el',\n            scale: [\n                { value: .1, easing: 'easeOutSine', duration: 500 },\n                { value: 1, easing: 'easeInOutQuad', duration: 1200 }\n            ],\n            opacity: 1,\n            delay: anime.stagger(200, { grid: [20, 8], from: 'center' })\n        }, 5000)\n\n    }\n\n    gridAnimation() {\n        anime({\n            targets: '.gridCont .el',\n            scale: [\n                { value: .1, easing: 'easeOutSine', duration: 500 },\n                { value: 1, easing: 'easeInOutQuad', duration: 1200 }\n            ],\n            delay: anime.stagger(200, { grid: [20, 10], from: 'center' }),\n            duration: \"20\"\n        }).add({\n            targets: \".type\",\n            opacity: \"0\",\n            duration: \"1\",\n        });\n    }\n\n\n\n    componentDidMount() {\n        console.log(\"Hey, thanks for visiting. Let me know if you want to work together, email me at kevin@everysf.com. Cheers\")\n        this.runAnime()\n\n    }\n\n    makeArr = () => {\n        let arr = [];\n        for (var i = 0; i < 220; i++) {\n            arr.push(<DynamicItem className=\"el\" />)\n        }\n        return arr\n    }\n\n    render() {\n        return (\n            <Wrapper>\n                <GridContainer className=\"gridCont\">\n                    {this.makeArr()}\n                </GridContainer>\n                <Typist className=\"type\">\n                    The most effective way to get your story told on the web?\n                </Typist>\n            </Wrapper>\n        );\n    }\n\n}\n\nexport default Fun;\n"]},"metadata":{},"sourceType":"module"}